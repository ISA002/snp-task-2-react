{"version":3,"sources":["components/Application/index.module.scss","assets/images/noAvatar1.png","components/TextInput/index.module.scss","components/Document/index.jsx","utils/constants.js","utils/validatorFn.js","components/TextInput/index.jsx","store/actions/constants.js","components/Form/index.jsx","store/actions/form.js","components/Application/index.jsx","serviceWorker.js","store/reducers/form.js","utils/createReducer.js","store/reducers/index.js","store/index.js","index.js","components/Document/index.module.scss","components/Form/index.module.scss"],"names":["module","exports","React","memo","form","useSelector","state","_renderinfo","useMemo","map","info","index","key","className","style","name","value","src","noAvatar","alt","emailRegex","phoneRegex","dateRegex","errors","fullname","email","phone","birthdate","message","placeholders","validatorFnProperties","length","match","props","data","onChange","getPlaceholder","useCallback","_inputTypes","isValid","isTextArea","placeholder","type","required","color","fontSize","getError","dispatch","useDispatch","formData","useEffect","localStorage","setItem","JSON","stringify","useState","setData","handleInputChange","event","nextData","target","ActionTypes","payload","_renderInput","input","e","App","content","Boolean","window","location","hostname","formReducer","initialState","handlers","action","hasOwnProperty","createReducer","getItem","parse","newState","rootLevelReducer","combineReducers","store","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","ReactDOM","render","Application","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.671c3534.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Application_content__1TvXZ\"};","module.exports = __webpack_public_path__ + \"static/media/noAvatar1.87f1860d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"TextInput_name__ADnKP\",\"email\":\"TextInput_email__1C5So\",\"phone\":\"TextInput_phone__1ogFd\",\"fullname\":\"TextInput_fullname__2OpEc\",\"birthdate\":\"TextInput_birthdate__S_XVJ\",\"message\":\"TextInput_message___4sIt\",\"label-input\":\"TextInput_label-input__aor5P\",\"form-input\":\"TextInput_form-input__2SDqR\",\"form-textarea\":\"TextInput_form-textarea__1udCL\"};","import React from \"react\";\r\nimport style from \"./index.module.scss\";\r\nimport noAvatar from \"#/assets/images/noAvatar1.png\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Document = () => {\r\n  const form = useSelector((state) => state.form);\r\n\r\n  const _renderinfo = React.useMemo(() => {\r\n    return form.map((info, index) => (\r\n      <div key={index} className={style[\"text\"]}>\r\n        <div className={style[\"title\"]}>\r\n          {info.name}: {info.value || \"-\"}\r\n        </div>\r\n      </div>\r\n    ));\r\n  }, [form]);\r\n\r\n  return (\r\n    <div className={style[\"content\"]}>\r\n      <img className={style[\"image\"]} src={noAvatar} alt=\"loading...\"></img>\r\n      {_renderinfo}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Document);\r\n","export const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/g;\r\n\r\nexport const phoneRegex = /^(\\+7|7|8)?[\\s\\-]?\\(?[489][0-9]{2}\\)?[\\s\\-]?[0-9]{3}[\\s\\-]?[0-9]{2}[\\s\\-]?[0-9]{2}$/g;\r\n\r\nexport const dateRegex = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[13-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/g;\r\n\r\nexport const errors = {\r\n  fullname: \"Invalid fullname. Lenth more 21 symbols\",\r\n  email: \"Invalid email. Please use a@mail.ru\",\r\n  phone: \"Please use +7|8 *** *** ** ** format\",\r\n  birthdate: \"Invalid date. Please use dd.mm.yyyy format\",\r\n  message: \"Invalid message. Lenth more 486 symbols\",\r\n};\r\n\r\nexport const placeholders = {\r\n  fullname: \"Enter your name\",\r\n  email: \"Enter your email\",\r\n  phone: \"Enter your phone number\",\r\n  birthdate: \"Enter date\",\r\n  message: \"Your message here\",\r\n};\r\n","import { emailRegex, phoneRegex, dateRegex } from \"./constants\";\r\nimport { errors } from \"#/utils/constants\";\r\n\r\nconst validatorFnProperties = {\r\n  fullname: (value) => value.length <= 21,\r\n  email: (value) => !value.length || value.match(emailRegex),\r\n  phone: (value) => !value.length || value.match(phoneRegex),\r\n  birthdate: (value) => !value.length || value.match(dateRegex),\r\n  message: (value) => value.length <= 483,\r\n};\r\n\r\nexport const validatorFn = (name, value) => {\r\n  return validatorFnProperties[name](value);\r\n};\r\n\r\nexport const getError = (name) => {\r\n  return errors[name];\r\n};\r\n","import React from \"react\";\r\nimport style from \"./index.module.scss\";\r\nimport { validatorFn, getError } from \"#/utils/validatorFn\";\r\nimport { placeholders } from \"#/utils/constants\";\r\n\r\nconst TextInput = (props) => {\r\n  const { data, onChange } = props;\r\n\r\n  const getPlaceholder = React.useCallback(() => {\r\n    return placeholders[data.name];\r\n  }, [data]);\r\n\r\n  const _inputTypes = React.useMemo(() => {\r\n    const isValid = validatorFn(data.name, data.value);\r\n\r\n    return (\r\n      <div className={`${style[`${data.name}`]} ${style[\"name\"]}`}>\r\n        <span className={style[\"label-input\"]}>{data.name}*</span>\r\n        {data.isTextArea ? (\r\n          <textarea\r\n            value={data.value}\r\n            onChange={onChange}\r\n            className={style[\"form-textarea\"]}\r\n            placeholder={getPlaceholder(data.name)}\r\n          ></textarea>\r\n        ) : (\r\n          <input\r\n            value={data.value}\r\n            onChange={onChange}\r\n            className={style[\"form-input\"]}\r\n            type=\"text\"\r\n            placeholder={getPlaceholder(data.name)}\r\n            required\r\n          />\r\n        )}\r\n        {!isValid && (\r\n          <span style={{ color: \"red\", fontSize: \"11px\" }}>{getError(data.name)}</span>\r\n        )}\r\n      </div>\r\n    );\r\n  }, [data, onChange, getPlaceholder]);\r\n\r\n  return <>{_inputTypes}</>;\r\n};\r\n\r\nexport default React.memo(TextInput);\r\n","export default {\r\n  CHANGE_FIELD: \"CHANGE_FIELD\",\r\n};\r\n","import React from \"react\";\r\nimport style from \"./index.module.scss\";\r\nimport TextInput from \"#/components/TextInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changeField } from \"#/store/actions/form\";\r\n\r\nconst Form = () => {\r\n  const dispatch = useDispatch();\r\n  const formData = useSelector((state) => state.form);\r\n\r\n  React.useEffect(() => {\r\n    localStorage.setItem(\"formData\", JSON.stringify(formData));\r\n  }, [formData]);\r\n\r\n  const [data, setData] = React.useState([\r\n    {\r\n      value: \"\",\r\n    },\r\n    {\r\n      value: \"\",\r\n    },\r\n    {\r\n      value: \"\",\r\n    },\r\n    {\r\n      value: \"\",\r\n    },\r\n    {\r\n      value: \"\",\r\n    },\r\n  ]);\r\n\r\n  const handleInputChange = React.useCallback(\r\n    (index, event) => {\r\n      const nextData = [...data];\r\n      const { value } = event.target;\r\n      nextData[index] = { ...nextData[index], value: value };\r\n      setData(nextData);\r\n      dispatch(changeField({ value, index }));\r\n    },\r\n    [data, dispatch]\r\n  );\r\n\r\n  const _renderInput = React.useMemo(() => {\r\n    return formData.map((input, index) => (\r\n      <TextInput\r\n        key={index}\r\n        data={input}\r\n        onChange={(e) => handleInputChange(index, e)}\r\n      />\r\n    ));\r\n  }, [formData, handleInputChange]);\r\n\r\n  return (\r\n    <div className={style[\"content\"]}>\r\n      <form className={style[\"form\"]}>\r\n        <div className={style[\"title\"]}>Contact us</div>\r\n        {_renderInput}\r\n        <button type=\"submit\" className={style[\"button\"]}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Form);\r\n","import ActionTypes from \"./constants\";\r\n\r\nexport const changeField = (payload) => {\r\n  return { type: ActionTypes.CHANGE_FIELD, payload };\r\n};\r\n","import React from \"react\";\nimport style from \"./index.module.scss\";\nimport Document from \"#/components/Document\";\nimport Form from \"#/components/Form\";\n\nconst App = () => {\n  return (\n    <div className={style.content}>\n      <Form />\n      <Document />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ActionTypes from \"#/store/actions/constants.js\";\r\nimport { createReducer } from \"#/utils/createReducer.js\";\r\n\r\nconst initialState = localStorage.getItem(\"formData\")\r\n  ? JSON.parse(localStorage.getItem(\"formData\"))\r\n  : [\r\n      {\r\n        value: \"\",\r\n        name: \"fullname\",\r\n      },\r\n      {\r\n        value: \"\",\r\n        name: \"email\",\r\n      },\r\n      {\r\n        value: \"\",\r\n        name: \"phone\",\r\n      },\r\n      {\r\n        value: \"\",\r\n        name: \"birthdate\",\r\n      },\r\n      {\r\n        value: \"\",\r\n        name: \"message\",\r\n        isTextArea: true,\r\n      },\r\n    ];\r\n\r\nexport const formReducer = createReducer(initialState, {\r\n  [ActionTypes.CHANGE_FIELD]: (state, action) => {\r\n    const newState = [...state];\r\n    newState[action.payload.index].value = action.payload.value;\r\n    return newState;\r\n  },\r\n});\r\n","export const createReducer = (initialState, handlers) => {\r\n  return (state = initialState, action) => {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    } else {\r\n      return state;\r\n    }\r\n  };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { formReducer } from \"./form.js\";\r\n\r\nexport const rootLevelReducer = combineReducers({\r\n  form: formReducer,\r\n});","  \r\nimport { createStore, compose } from \"redux\";\r\nimport { rootLevelReducer } from \"./reducers/index.js\";\r\n\r\nconst store = (() => {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const enhancer = composeEnhancers();\r\n  return createStore(rootLevelReducer, enhancer);\r\n})();\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Application from \"#/components/Application/index\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"#/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Application />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Document_content__2Uq0L\",\"image\":\"Document_image__27ANf\",\"text\":\"Document_text__2jLWd\",\"title\":\"Document_title__3ZwKL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Form_content__1CDT2\",\"form\":\"Form_form__eUB2R\",\"title\":\"Form_title__3oMvl\",\"button\":\"Form_button__3d3lH\"};"],"sourceRoot":""}